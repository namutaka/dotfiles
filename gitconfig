[core]
  excludesfile = ~/dotfiles/git-excludes
  quotepath = false
  editor = mvim -f

[alias]
  co = checkout
  cof = !git branch | fzf | xargs -n 1 git checkout
  br = branch -v
  ci = commit
  st = status -bs
  last = log -1 HEAD
  ds = diff --stat
  ca = diff --cached
  cs = diff --cached --stat
  vimdiff = difftool -t macvimdiff
  df = !git --no-pager diff
  re = remote -v
  mt = mergetool
  glog = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
  changelog = log --graph --topo-order --stat
  fp = log --first-parent

  # あるコミットがマージされた箇所を調べる (https://stackoverflow.com/questions/8475448/find-merge-commit-which-include-a-specific-commit)
  find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
  show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"


[difftool]
  prompt = false

[difftool "macvimdiff"]
  cmd = "git_diff_macvim \"$LOCAL\" \"$REMOTE\""

[pager]
  log = diff-highlight | less
  show = diff-highlight | less
  diff = diff-highlight | less

[color]
  ui = auto

[merge]
	tool = mvimdiff
	conflictstyle = diff3
[mergetool]
	prompt = false
	keepBackup = false
[mergetool "mvimdiff"]
  cmd = mvimdiff -f "$LOCAL" "$MERGED" "$REMOTE"

[push]
	default = simple

[gui]
	commitmsgwidth = 85
[diff]
	algorithm = patience

[fetch]
	recurseSubmodules = false
	prune = true

[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =

[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true

[user]
	useConfigOnly = true


[grep]
  lineNumber = true

[rerere]
	enabled = true
[pull]
	ff = only
